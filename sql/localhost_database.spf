<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<data>
	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
	</data>
	<key>encrypted</key>
	<true/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2017-12-31",1,1,1,@VID_ARTICLE);
CALL PARTICLE("2018-01-26",1,1,2,VID_ARTICLE)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITIVITE;
CREATE PROCEDURE PPOSITIVITE (IN VPOSITIVITE BOOLEAN)
BEGIN
     INSERT INTO POSITIVITE VALUES (NULL,VPOSITIVITE);
END;
CALL PPOSITIVITE(TRUE);
CALL PPOSITIVITE(FALSE)</string>
		<string>DROP PROCEDURE IF EXISTS PJOURNAL;
CREATE PROCEDURE PJOURNAL (IN VJOURNAL VARCHAR(50))
BEGIN
     INSERT INTO JOURNAL VALUES (NULL,VJOURNAL);
END;
CALL PJOURNAL("LIBERATION");
CALL PJOURNAL("FIGARO")</string>
		<string>DROP PROCEDURE IF EXISTS PCLASSIFICATION;
CREATE PROCEDURE PCLASSIFICATION (IN VCLASSE VARCHAR(50))
BEGIN
     INSERT INTO CLASSIFICATION VALUES (NULL,VCLASSE);
END;
CALL PCLASSIFICATION("SPORT");
CALL PCLASSIFICATION("HUMOUR")</string>
		<string>DROP PROCEDURE IF EXISTS PPOS_TAG;
CREATE PROCEDURE PPOS_TAGGING (IN VPOS_TAG VARCHAR(50))
BEGIN
     INSERT INTO POS_TAGGING VALUES (NULL,VPOS_TAG);
END;
CALL PPOS_TAGGING("ADVERBE");
CALL PPOS_TAGGING("SUJET")</string>
		<string>DROP PROCEDURE IF EXISTS PENTITE;
CREATE PROCEDURE PENTITE (IN VENTITE VARCHAR(50))   
BEGIN
     INSERT INTO ENTITE VALUES (NULL,VENTITE);
END;
CALL PENTITE("PERSONNE");
CALL PENTITE("LIEU")</string>
		<string>CALL PENTITE("LIEU")</string>
		<string>DROP PROCEDURE IF EXISTS PMOT;
CREATE PROCEDURE PMOT (IN VMOT VARCHAR(50), IN VRACINE VARCHAR(50), OUT VID_RACINE INT)   


BEGIN
DECLARE VID_MOT INT DEFAULT 0;

     INSERT INTO MOT VALUES (NULL,VMOT);
     
     SELECT ID_MOT INTO VID_MOT
     FROM MOT
     WHERE MOT=VMOT;

     INSERT INTO MOT_RACINE VALUES (NULL,VRACINE,VID_MOT);  

     SELECT ID_RACINE INTO VID_RACINE
     FROM MOT_RACINE
     WHERE MOT=VRACINE;

END;
CALL PMOT("VBA", "PYTHON", @ID_RACINE);
CALL PMOT("PHP", "JAVA", @ID_RACINE);
SELECT @ID_RACINE</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position_mot(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_entite FOREIGN KEY (id_entite) REFERENCES entite(id_entite);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position_mot ADD CONSTRAINT FK_position_mot_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_auteur FOREIGN KEY (id_auteur) REFERENCES auteur(id_auteur)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position_mot(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position ADD CONSTRAINT FK_position_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position_mot(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position ADD CONSTRAINT FK_position_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine);
ALTER TABLE position ADD CONSTRAINT FK_position_id_entite FOREIGN KEY (id_entite) REFERENCES entite(id_entite);
ALTER TABLE position ADD CONSTRAINT FK_position_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position ADD CONSTRAINT FK_position_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_auteur FOREIGN KEY (id_auteur) REFERENCES auteur(id_auteur)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        id_journal       Int NOT NULL ,
        id_classe        Int NOT NULL ,
        id_positivite    Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: journal
#------------------------------------------------------------

CREATE TABLE journal(
        id_journal  int (11) Auto_increment  NOT NULL ,
        nom_journal Varchar (50) ,
        PRIMARY KEY (id_journal ) ,
        UNIQUE (nom_journal )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: auteur
#------------------------------------------------------------

CREATE TABLE auteur(
        id_auteur     int (11) Auto_increment  NOT NULL ,
        nom_auteur    Varchar (50) ,
        prenom_auteur Varchar (50) ,
        PRIMARY KEY (id_auteur )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: classification
#------------------------------------------------------------

CREATE TABLE classification(
        id_classe int (11) Auto_increment  NOT NULL ,
        classe    Varchar (25) ,
        PRIMARY KEY (id_classe ) ,
        UNIQUE (classe )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: positivite
#------------------------------------------------------------

CREATE TABLE positivite(
        id_positivite int (11) Auto_increment  NOT NULL ,
        positivite    Bool ,
        PRIMARY KEY (id_positivite ) ,
        UNIQUE (positivite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot_racine
#------------------------------------------------------------

CREATE TABLE mot_racine(
        id_racine int (11) Auto_increment  NOT NULL ,
        mot       Varchar (25) ,
        id_mot    Int NOT NULL ,
        PRIMARY KEY (id_racine ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entite
#------------------------------------------------------------

CREATE TABLE entite(
        id_entite   int (11) Auto_increment  NOT NULL ,
        type_entite Varchar (25) ,
        PRIMARY KEY (id_entite ) ,
        UNIQUE (type_entite )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: mot
#------------------------------------------------------------

CREATE TABLE mot(
        id_mot int (11) Auto_increment  NOT NULL ,
        mot    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_mot ) ,
        UNIQUE (mot )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position
#------------------------------------------------------------

CREATE TABLE position(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        titre       Bool NOT NULL ,
        id_racine   Int NOT NULL ,
        id_entite   Int NOT NULL ,
        id_pos_tag  Int NOT NULL ,
        id_article  Int NOT NULL ,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: ecrit
#------------------------------------------------------------

CREATE TABLE ecrit(
        id_article Int NOT NULL ,
        id_auteur  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_auteur )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_journal FOREIGN KEY (id_journal) REFERENCES journal(id_journal);
ALTER TABLE article ADD CONSTRAINT FK_article_id_classe FOREIGN KEY (id_classe) REFERENCES classification(id_classe);
ALTER TABLE article ADD CONSTRAINT FK_article_id_positivite FOREIGN KEY (id_positivite) REFERENCES positivite(id_positivite);
ALTER TABLE mot_racine ADD CONSTRAINT FK_mot_racine_id_mot FOREIGN KEY (id_mot) REFERENCES mot(id_mot);
ALTER TABLE position ADD CONSTRAINT FK_position_id_racine FOREIGN KEY (id_racine) REFERENCES mot_racine(id_racine);
ALTER TABLE position ADD CONSTRAINT FK_position_id_entite FOREIGN KEY (id_entite) REFERENCES entite(id_entite);
ALTER TABLE position ADD CONSTRAINT FK_position_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position ADD CONSTRAINT FK_position_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE ecrit ADD CONSTRAINT FK_ecrit_id_auteur FOREIGN KEY (id_auteur) REFERENCES auteur(id_auteur)</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2018-01-26",1,1,2,@VID_ARTICLE);
SELECT @VID_ARTICLE</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2018-01-26",1,1,2,VID_ARTICLE)</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2017-12-31",1,1,1,@VID_ARTICLE);
-- CALL PARTICLE("01-01-2018",1,1,2,VID_ARTICLE);
SELECT @VID_ARTICLE</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,STR_TO_DATE(VDATE_PUBLICATION,'%d-%m-%Y'),VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("31-12-2017",1,1,1,@VID_ARTICLE);
CALL PARTICLE("01-01-2018",1,1,2,VID_ARTICLE)</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,SELECT STR_TO_DATE(VDATE_PUBLICATION,'%d-%m-%Y');,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VID_JOURNAL INT, IN VID_CLASSE INT, VID_POSITIVE INT, OUT VID_ARTICLE INT)   

BEGIN

     INSERT INTO ARTICLE VALUES (NULL,VDATE_PUBLICATION,VID_JOURNAL,VID_CLASSE,VID_POSITIVE);
     SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE('31-12-2017',1,1,1,@VID_ARTICLE)</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.20</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
